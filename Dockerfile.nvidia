FROM picsellia/cuda:11.8.0-cudnn8-ubuntu20.04-python3.9

# This makes output not buffer and return immediately, nice for seeing results in stdout
ENV PYTHONUNBUFFERED=1

# Update package list and install necessary packages
RUN apt-get update && apt-get install -y curl gnupg2 ca-certificates

# Install Docker
RUN apt-get install -y curl \
    && curl -fsSL https://get.docker.com | sh

# Nvidia Container Toolkit for cuda use with docker
# [source](https://docs.nvidia.com/datacenter/cloud-native/container-toolkit/latest/install-guide.html)
RUN curl -fsSL https://nvidia.github.io/libnvidia-container/gpgkey | gpg --dearmor -o /usr/share/keyrings/nvidia-container-toolkit-keyring.gpg \
    && curl -s -L https://nvidia.github.io/libnvidia-container/stable/deb/nvidia-container-toolkit.list | \
    sed 's#deb https://#deb [signed-by=/usr/share/keyrings/nvidia-container-toolkit-keyring.gpg] https://#g' | \
    tee /etc/apt/sources.list.d/nvidia-container-toolkit.list
RUN apt-get update -y;
RUN apt-get install -y nvidia-container-toolkit

# Make it explicit that we're using GPUs
ENV USE_GPU=1
ENV PATH=$PATH:/root/.local/bin

# Install PyTorch with CUDA 11.8 support and other dependencies
COPY ./requirements.txt ./
RUN pip3.9 install --no-cache-dir torch torchvision --index-url https://download.pytorch.org/whl/cu118
RUN pip3.9 install --no-cache-dir -r ./requirements.txt

COPY ./compute_worker.py ./
COPY ./celery_config.py ./

CMD celery -A compute_worker worker \
    -l info \
    -Q compute-worker \
    -n compute-worker@%n \
    --concurrency=1